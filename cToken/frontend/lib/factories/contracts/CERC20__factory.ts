/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { CERC20, CERC20Interface } from "../../contracts/CERC20";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "humanboundToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "noncompliantERC20_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensWrapped",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015333803806200153383398101604081905262000034916200022f565b8351849084906200004d9060039060208501906200009f565b508051620000639060049060208401906200009f565b5050600580546001600160a01b039485166001600160a01b031991821617909155600680549390941692169190911790915550620002fa915050565b828054620000ad90620002be565b90600052602060002090601f016020900481019282620000d157600085556200011c565b82601f10620000ec57805160ff19168380011785556200011c565b828001600101855582156200011c579182015b828111156200011c578251825591602001919060010190620000ff565b506200012a9291506200012e565b5090565b5b808211156200012a57600081556001016200012f565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016d57600080fd5b81516001600160401b03808211156200018a576200018a62000145565b604051601f8301601f19908116603f01168101908282118183101715620001b557620001b562000145565b81604052838152602092508683858801011115620001d257600080fd5b600091505b83821015620001f65785820183015181830184015290820190620001d7565b83821115620002085760008385830101525b9695505050505050565b80516001600160a01b03811681146200022a57600080fd5b919050565b600080600080608085870312156200024657600080fd5b84516001600160401b03808211156200025e57600080fd5b6200026c888389016200015b565b955060208701519150808211156200028357600080fd5b5062000292878288016200015b565b935050620002a36040860162000212565b9150620002b36060860162000212565b905092959194509250565b600181811c90821680620002d357607f821691505b602082108103620002f457634e487b7160e01b600052602260045260246000fd5b50919050565b611229806200030a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063dd62ed3e11610066578063dd62ed3e146101ee578063de0e9a3e14610227578063ea598cb01461023a578063fa22f30a1461024d57600080fd5b806370a082311461019757806395d89b41146101c0578063a457c2d7146101c8578063a9059cbb146101db57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610256565b60405161010f919061101d565b60405180910390f35b61012b61012636600461108e565b6102e8565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b3660046110b8565b610300565b6040516012815260200161010f565b61012b61017d36600461108e565b610324565b61019561019036600461108e565b610363565b005b61013f6101a53660046110f4565b6001600160a01b031660009081526020819052604090205490565b610102610371565b61012b6101d636600461108e565b610380565b61012b6101e936600461108e565b61042f565b61013f6101fc366004611116565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610195610235366004611149565b61043d565b610195610248366004611149565b610626565b61013f60075481565b60606003805461026590611162565b80601f016020809104026020016040519081016040528092919081815260200182805461029190611162565b80156102de5780601f106102b3576101008083540402835291602001916102de565b820191906000526020600020905b8154815290600101906020018083116102c157829003601f168201915b5050505050905090565b6000336102f681858561079a565b5060019392505050565b60003361030e8582856108be565b610319858585610950565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102f6908290869061035e9087906111b2565b61079a565b61036d8282610b0e565b5050565b60606004805461026590611162565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104225760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610319828686840361079a565b6000336102f6818585610950565b6005546040516370a0823160e01b81523360048201819052916000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af91906111ca565b116105135760405162461bcd60e51b815260206004820152602e60248201527f6345524332303a206163636f756e74206973206e6f742068756d616e626f756e60448201526d32103a37b5b2b7103437b63232b960911b6064820152608401610419565b81600754101561058b5760405162461bcd60e51b815260206004820152603560248201527f6345524332305f756e777261703a20616d6f756e7420746f20756e777261702060448201527f6578636565647320746f74616c207772617070656400000000000000000000006064820152608401610419565b6105953383610bf3565b60065460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a91906111e3565b50816007600082825461061d9190611205565b90915550505050565b6005546040516370a0823160e01b81523360048201819052916000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069891906111ca565b116106fc5760405162461bcd60e51b815260206004820152602e60248201527f6345524332303a206163636f756e74206973206e6f742068756d616e626f756e60448201526d32103a37b5b2b7103437b63232b960911b6064820152608401610419565b6006546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610753573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077791906111e3565b50816007600082825461078a91906111b2565b9091555061036d90503383610b0e565b6001600160a01b0383166107fc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610419565b6001600160a01b03821661085d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610419565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461094a578181101561093d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610419565b61094a848484840361079a565b50505050565b6005546040516370a0823160e01b81526001600160a01b03808516600483015284926000929116906370a0823190602401602060405180830381865afa15801561099e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c291906111ca565b11610a265760405162461bcd60e51b815260206004820152602e60248201527f6345524332303a206163636f756e74206973206e6f742068756d616e626f756e60448201526d32103a37b5b2b7103437b63232b960911b6064820152608401610419565b6005546040516370a0823160e01b81526001600160a01b03808716600483015286926000929116906370a0823190602401602060405180830381865afa158015610a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9891906111ca565b11610afc5760405162461bcd60e51b815260206004820152602e60248201527f6345524332303a206163636f756e74206973206e6f742068756d616e626f756e60448201526d32103a37b5b2b7103437b63232b960911b6064820152608401610419565b610b07858585610d41565b5050505050565b6005546040516370a0823160e01b81526001600160a01b03808516600483015284926000929116906370a0823190602401602060405180830381865afa158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8091906111ca565b11610be45760405162461bcd60e51b815260206004820152602e60248201527f6345524332303a206163636f756e74206973206e6f742068756d616e626f756e60448201526d32103a37b5b2b7103437b63232b960911b6064820152608401610419565b610bee8383610f3e565b505050565b6001600160a01b038216610c535760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610419565b6001600160a01b03821660009081526020819052604090205481811015610cc75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610419565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610cf6908490611205565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b038316610dbd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610419565b6001600160a01b038216610e1f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610419565b6001600160a01b03831660009081526020819052604090205481811015610eae5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610419565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ee59084906111b2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f3191815260200190565b60405180910390a361094a565b6001600160a01b038216610f945760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610419565b8060026000828254610fa691906111b2565b90915550506001600160a01b03821660009081526020819052604081208054839290610fd39084906111b2565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561104a5785810183015185820160400152820161102e565b8181111561105c576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461108957600080fd5b919050565b600080604083850312156110a157600080fd5b6110aa83611072565b946020939093013593505050565b6000806000606084860312156110cd57600080fd5b6110d684611072565b92506110e460208501611072565b9150604084013590509250925092565b60006020828403121561110657600080fd5b61110f82611072565b9392505050565b6000806040838503121561112957600080fd5b61113283611072565b915061114060208401611072565b90509250929050565b60006020828403121561115b57600080fd5b5035919050565b600181811c9082168061117657607f821691505b60208210810361119657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156111c5576111c561119c565b500190565b6000602082840312156111dc57600080fd5b5051919050565b6000602082840312156111f557600080fd5b8151801515811461110f57600080fd5b6000828210156112175761121761119c565b50039056fea164736f6c634300080e000a";

type CERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CERC20__factory extends ContractFactory {
  constructor(...args: CERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    humanboundToken_: PromiseOrValue<string>,
    noncompliantERC20_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CERC20> {
    return super.deploy(
      name_,
      symbol_,
      humanboundToken_,
      noncompliantERC20_,
      overrides || {}
    ) as Promise<CERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    humanboundToken_: PromiseOrValue<string>,
    noncompliantERC20_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      humanboundToken_,
      noncompliantERC20_,
      overrides || {}
    );
  }
  override attach(address: string): CERC20 {
    return super.attach(address) as CERC20;
  }
  override connect(signer: Signer): CERC20__factory {
    return super.connect(signer) as CERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CERC20Interface {
    return new utils.Interface(_abi) as CERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CERC20 {
    return new Contract(address, _abi, signerOrProvider) as CERC20;
  }
}
