/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20MerkleDrop,
  ERC20MerkleDropInterface,
} from "../ERC20MerkleDrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "merkleroot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000f3e38038062000f3e8339810160408190526200003491620001cf565b8251839083906200004d90600390602085019062000072565b5080516200006390600490602084019062000072565b50505060805250620002959050565b828054620000809062000242565b90600052602060002090601f016020900481019282620000a45760008555620000ef565b82601f10620000bf57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ef578251825591602001919060010190620000d2565b50620000fd92915062000101565b5090565b5b80821115620000fd576000815560010162000102565b600082601f8301126200012a57600080fd5b81516001600160401b03808211156200014757620001476200027f565b604051601f8301601f19908116603f011681019082821181831017156200017257620001726200027f565b816040528381526020925086838588010111156200018f57600080fd5b600091505b83821015620001b3578582018301518183018401529082019062000194565b83821115620001c55760008385830101525b9695505050505050565b600080600060608486031215620001e557600080fd5b83516001600160401b0380821115620001fd57600080fd5b6200020b8783880162000118565b945060208601519150808211156200022257600080fd5b50620002318682870162000118565b925050604084015190509250925092565b600181811c908216806200025757607f821691505b602082108114156200027957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b608051610c86620002b860003960008181610206015261066c0152610c866000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d7146101a2578063a9059cbb146101b5578063dd62ed3e146101c8578063ebf0c7171461020157600080fd5b8063395093511461015e57806370a082311461017157806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806314132f481461011557806318160ddd1461012a57806323b872dd1461013c578063313ce5671461014f575b600080fd5b6100dc610228565b6040516100e99190610b61565b60405180910390f35b610105610100366004610aad565b6102ba565b60405190151581526020016100e9565b610128610123366004610ad7565b6102d0565b005b6002545b6040519081526020016100e9565b61010561014a366004610a71565b6103a5565b604051601281526020016100e9565b61010561016c366004610aad565b61044f565b61012e61017f366004610a23565b6001600160a01b031660009081526020819052604090205490565b6100dc61048b565b6101056101b0366004610aad565b61049a565b6101056101c3366004610aad565b610533565b61012e6101d6366004610a3e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61012e7f000000000000000000000000000000000000000000000000000000000000000081565b60606003805461023790610bce565b80601f016020809104026020016040519081016040528092919081815260200182805461026390610bce565b80156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b5050505050905090565b60006102c7338484610540565b50600192915050565b60408051606086901b6bffffffffffffffffffffffff19166020808301919091526034808301879052835180840390910181526054909201909252805191012061034d9083838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061066492505050565b6103955760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21036b2b935b63290383937b7b360611b60448201526064015b60405180910390fd5b61039f8484610698565b50505050565b60006103b2848484610777565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104375760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161038c565b6104448533858403610540565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102c7918590610486908690610bb6565b610540565b60606004805461023790610bce565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561051c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161038c565b6105293385858403610540565b5060019392505050565b60006102c7338484610777565b6001600160a01b0383166105a25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161038c565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161038c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610691827f000000000000000000000000000000000000000000000000000000000000000085610945565b9392505050565b6001600160a01b0382166106ee5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161038c565b80600260008282546107009190610bb6565b90915550506001600160a01b0382166000908152602081905260408120805483929061072d908490610bb6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166107db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161038c565b6001600160a01b03821661083d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161038c565b6001600160a01b038316600090815260208190526040902054818110156108b55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161038c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108ec908490610bb6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093891815260200190565b60405180910390a361039f565b600082610952858461095b565b14949350505050565b600081815b84518110156109ff57600085828151811061097d5761097d610c3a565b602002602001015190508083116109bf5760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506109ec565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806109f781610c09565b915050610960565b509392505050565b80356001600160a01b0381168114610a1e57600080fd5b919050565b600060208284031215610a3557600080fd5b61069182610a07565b60008060408385031215610a5157600080fd5b610a5a83610a07565b9150610a6860208401610a07565b90509250929050565b600080600060608486031215610a8657600080fd5b610a8f84610a07565b9250610a9d60208501610a07565b9150604084013590509250925092565b60008060408385031215610ac057600080fd5b610ac983610a07565b946020939093013593505050565b60008060008060608587031215610aed57600080fd5b610af685610a07565b935060208501359250604085013567ffffffffffffffff80821115610b1a57600080fd5b818701915087601f830112610b2e57600080fd5b813581811115610b3d57600080fd5b8860208260051b8501011115610b5257600080fd5b95989497505060200194505050565b600060208083528351808285015260005b81811015610b8e57858101830151858201604001528201610b72565b81811115610ba0576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610bc957610bc9610c24565b500190565b600181811c90821680610be257607f821691505b60208210811415610c0357634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610c1d57610c1d610c24565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ebf461f5f158850dbad5dcd7b95b57e20fc8be857661c32b7dfc73c28adafcc464736f6c63430008070033";

type ERC20MerkleDropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MerkleDropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20MerkleDrop__factory extends ContractFactory {
  constructor(...args: ERC20MerkleDropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20MerkleDrop";
  }

  deploy(
    name: string,
    symbol: string,
    merkleroot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20MerkleDrop> {
    return super.deploy(
      name,
      symbol,
      merkleroot,
      overrides || {}
    ) as Promise<ERC20MerkleDrop>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    merkleroot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      merkleroot,
      overrides || {}
    );
  }
  attach(address: string): ERC20MerkleDrop {
    return super.attach(address) as ERC20MerkleDrop;
  }
  connect(signer: Signer): ERC20MerkleDrop__factory {
    return super.connect(signer) as ERC20MerkleDrop__factory;
  }
  static readonly contractName: "ERC20MerkleDrop";
  public readonly contractName: "ERC20MerkleDrop";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MerkleDropInterface {
    return new utils.Interface(_abi) as ERC20MerkleDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20MerkleDrop {
    return new Contract(address, _abi, signerOrProvider) as ERC20MerkleDrop;
  }
}
