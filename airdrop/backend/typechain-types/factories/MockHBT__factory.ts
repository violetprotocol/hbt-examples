/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockHBT, MockHBTInterface } from "../MockHBT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820182526007815266135bd8dad2109560ca1b6020808301918252835180850190945260048452631352109560e21b9084015281519192916200005d916000916200007c565b508051620000739060019060208401906200007c565b5050506200015f565b8280546200008a9062000122565b90600052602060002090601f016020900481019282620000ae5760008555620000f9565b82601f10620000c957805160ff1916838001178555620000f9565b82800160010185558215620000f9579182015b82811115620000f9578251825591602001919060010190620000dc565b50620001079291506200010b565b5090565b5b808211156200010757600081556001016200010c565b600181811c908216806200013757607f821691505b602082108114156200015957634e487b7160e01b600052602260045260246000fd5b50919050565b61147c806200016f6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b806370a08231146101a557806395d89b41146101c6578063a1448194146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd36600461115b565b610256565b60405190151581526020015b60405180910390f35b61011f6102a8565b60405161010e9190611246565b61013f61013a366004611195565b61033a565b6040516001600160a01b03909116815260200161010e565b61016a610165366004611131565b6103d4565b005b61016a61017a366004610fdd565b6104ea565b61016a61018d366004610fdd565b61051b565b61013f6101a0366004611195565b610536565b6101b86101b3366004610f8f565b6105ad565b60405190815260200161010e565b61011f610634565b61016a6101dc366004611131565b610643565b61016a6101ef3660046110f5565b6106a7565b61016a610202366004611019565b6106b2565b61011f610215366004611195565b6106ea565b610102610228366004610faa565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028757506001600160e01b03198216635b5e139f60e01b145b806102a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102b79061136b565b80601f01602080910402602001604051908101604052809291908181526020018280546102e39061136b565b80156103305780601f1061030557610100808354040283529160200191610330565b820191906000526020600020905b81548152906001019060200180831161031357829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103b85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103df82610536565b9050806001600160a01b0316836001600160a01b0316141561044d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103af565b336001600160a01b038216148061046957506104698133610228565b6104db5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103af565b6104e583836107d2565b505050565b6104f43382610840565b6105105760405162461bcd60e51b81526004016103af906112ab565b6104e5838383610937565b6104e5838383604051806020016040528060008152506106b2565b6000818152600260205260408120546001600160a01b0316806102a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103af565b60006001600160a01b0382166106185760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103af565b506001600160a01b031660009081526003602052604090205490565b6060600180546102b79061136b565b61064c826105ad565b156106995760405162461bcd60e51b815260206004820152601c60248201527f4164647265737320616c7265616479206f776e7320616e204842542e0000000060448201526064016103af565b6106a38282610ad7565b5050565b6106a3338383610af1565b6106bc3383610840565b6106d85760405162461bcd60e51b81526004016103af906112ab565b6106e484848484610bc0565b50505050565b6000818152600260205260409020546060906001600160a01b03166107695760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103af565b600061078060408051602081019091526000815290565b905060008151116107a057604051806020016040528060008152506107cb565b806107aa84610bf3565b6040516020016107bb9291906111da565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061080782610536565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108b95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103af565b60006108c483610536565b9050806001600160a01b0316846001600160a01b031614806108ff5750836001600160a01b03166108f48461033a565b6001600160a01b0316145b8061092f57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661094a82610536565b6001600160a01b0316146109b25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103af565b6001600160a01b038216610a145760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103af565b610a1f6000826107d2565b6001600160a01b0383166000908152600360205260408120805460019290610a48908490611328565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a769084906112fc565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106a3828260405180602001604052806000815250610cf1565b816001600160a01b0316836001600160a01b03161415610b535760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103af565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610bcb848484610937565b610bd784848484610d24565b6106e45760405162461bcd60e51b81526004016103af90611259565b606081610c175750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c415780610c2b816113a6565b9150610c3a9050600a83611314565b9150610c1b565b60008167ffffffffffffffff811115610c5c57610c5c611417565b6040519080825280601f01601f191660200182016040528015610c86576020820181803683370190505b5090505b841561092f57610c9b600183611328565b9150610ca8600a866113c1565b610cb39060306112fc565b60f81b818381518110610cc857610cc8611401565b60200101906001600160f81b031916908160001a905350610cea600a86611314565b9450610c8a565b610cfb8383610e31565b610d086000848484610d24565b6104e55760405162461bcd60e51b81526004016103af90611259565b60006001600160a01b0384163b15610e2657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d68903390899088908890600401611209565b602060405180830381600087803b158015610d8257600080fd5b505af1925050508015610db2575060408051601f3d908101601f19168201909252610daf91810190611178565b60015b610e0c573d808015610de0576040519150601f19603f3d011682016040523d82523d6000602084013e610de5565b606091505b508051610e045760405162461bcd60e51b81526004016103af90611259565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061092f565b506001949350505050565b6001600160a01b038216610e875760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103af565b6000818152600260205260409020546001600160a01b031615610eec5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103af565b6001600160a01b0382166000908152600360205260408120805460019290610f159084906112fc565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b0381168114610f8a57600080fd5b919050565b600060208284031215610fa157600080fd5b6107cb82610f73565b60008060408385031215610fbd57600080fd5b610fc683610f73565b9150610fd460208401610f73565b90509250929050565b600080600060608486031215610ff257600080fd5b610ffb84610f73565b925061100960208501610f73565b9150604084013590509250925092565b6000806000806080858703121561102f57600080fd5b61103885610f73565b935061104660208601610f73565b925060408501359150606085013567ffffffffffffffff8082111561106a57600080fd5b818701915087601f83011261107e57600080fd5b81358181111561109057611090611417565b604051601f8201601f19908116603f011681019083821181831017156110b8576110b8611417565b816040528281528a60208487010111156110d157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561110857600080fd5b61111183610f73565b91506020830135801515811461112657600080fd5b809150509250929050565b6000806040838503121561114457600080fd5b61114d83610f73565b946020939093013593505050565b60006020828403121561116d57600080fd5b81356107cb8161142d565b60006020828403121561118a57600080fd5b81516107cb8161142d565b6000602082840312156111a757600080fd5b5035919050565b600081518084526111c681602086016020860161133f565b601f01601f19169290920160200192915050565b600083516111ec81846020880161133f565b83519083019061120081836020880161133f565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061123c908301846111ae565b9695505050505050565b6020815260006107cb60208301846111ae565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561130f5761130f6113d5565b500190565b600082611323576113236113eb565b500490565b60008282101561133a5761133a6113d5565b500390565b60005b8381101561135a578181015183820152602001611342565b838111156106e45750506000910152565b600181811c9082168061137f57607f821691505b602082108114156113a057634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156113ba576113ba6113d5565b5060010190565b6000826113d0576113d06113eb565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461144357600080fd5b5056fea2646970667358221220770c3caaa686f32dee9b9458568319d924e05ef3df0356428333ab751fb7309c64736f6c63430008070033";

type MockHBTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockHBTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockHBT__factory extends ContractFactory {
  constructor(...args: MockHBTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockHBT";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockHBT> {
    return super.deploy(overrides || {}) as Promise<MockHBT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockHBT {
    return super.attach(address) as MockHBT;
  }
  connect(signer: Signer): MockHBT__factory {
    return super.connect(signer) as MockHBT__factory;
  }
  static readonly contractName: "MockHBT";
  public readonly contractName: "MockHBT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockHBTInterface {
    return new utils.Interface(_abi) as MockHBTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockHBT {
    return new Contract(address, _abi, signerOrProvider) as MockHBT;
  }
}
